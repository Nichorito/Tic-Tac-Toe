/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/styles.css":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/styles.css ***!
  \**************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\r\n    box-sizing: border-box;\r\n    overflow-x: hidden;\r\n}\r\n\r\n:root {\r\n    --background: #89aeb7;\r\n    --highlight-text: #fbf5e6;\r\n}\r\n\r\nbody {\r\n    background-color: var(--background);\r\n    color: var(--highlight-text);\r\n    font-family: \"Coiny\", system-ui;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    text-shadow: 0px 4px 1px black;\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\nh1 {\r\n    margin: 5px;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n    div {\r\n        display: none;\r\n    }\r\n}\r\n\r\n/*//////////\r\n/* HEADER */\r\n/*////////*/\r\n\r\n#header {\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    font-size: min(6.2vw,2rem);\r\n    padding: none;\r\n    color: #f8e5d5;\r\n}\r\n\r\n#AIbutton {\r\n    background-color: #4F8A9D;\r\n    font-family: \"Coiny\", system-ui;\r\n    text-shadow: 1px 3px 2px black;\r\n    color: #FBF5E6;\r\n    position: absolute;\r\n    top: 5%; right: 10%;\r\n    width: max(50px, 10%);\r\n    height: fit-content;\r\n    font-size: min(4vw,1rem);\r\n    font-weight: bolder;\r\n    border-radius: 25px;\r\n    box-shadow: none;\r\n    transition: .25s;\r\n    border: none;\r\n}\r\n\r\n#AIbutton:hover {\r\n    background-color: #356170;\r\n    transform: scale(1.05);\r\n}\r\n\r\n#AIbutton:active {\r\n    background-color: #1f2f35;\r\n    transform: scale(1.1);\r\n}\r\n\r\n\r\n\r\n/*////////////\r\n/// MAIN /////\r\n////////////*/\r\n\r\n#main {\r\n    display: flex;\r\n    flex-grow: 1;\r\n}\r\n\r\n#main > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n#main-left, #main-right{\r\n    width: 25%;\r\n    justify-content: center;\r\n}\r\n\r\n.player-name {\r\n    font-size: min(4rem, 3vw);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: end;\r\n}\r\n\r\n/* MARK DISPLAYS */\r\n\r\n.mark {\r\n    font-size: min(10rem, 10vw);\r\n    color: #f7c8c2;\r\n    display: flex;\r\n    flex-direction: column;\r\n    \r\n}\r\n\r\n#player1-mark {\r\n    color: #fea19a;\r\n}\r\n\r\n#player2-mark {\r\n    color: #4f8a9d;\r\n}\r\n\r\n.name-container {\r\n    display: flex;\r\n    position: relative;\r\n}\r\n\r\n#edit-player1-name {\r\n    display: flex;\r\n    bottom: 0px;\r\n    flex-direction: column;\r\n    justify-content: end;\r\n    font-size: min(2.5rem, 4.5vw);\r\n    opacity: 50%;\r\n    cursor: pointer;\r\n}\r\n\r\n#edit-player2-name {\r\n    bottom: 0;\r\n    cursor: pointer;\r\n    display: flex;\r\n    right: -50px;\r\n    flex-direction: column;\r\n    justify-content: end;\r\n    font-size: min(2.5rem, 4.5vw);\r\n    opacity: 50%;\r\n}\r\n\r\n\r\n/*//////////////////////////\r\n/////// NAME EDITOR ////////\r\n//////////////////////////*/\r\n\r\ninput {\r\n    position: absolute;\r\n    width: 85%;\r\n    height: 30%;\r\n    font-family: \"Coiny\", system-ui;\r\n    border-radius: .5rem;\r\n    border: 1px solid rgba(0, 0, 0, 0.432);\r\n}\r\n\r\n#player1-input {\r\n    height: fit-content;\r\n}\r\n\r\n#player2-input {\r\n    height: fit-content;\r\n}\r\n\r\n/* ////////// CENTER AREA /////////*/\r\n\r\n#main-center {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    width: 50%;\r\n}\r\n\r\n/*// TURN DISPLAY //*/\r\n\r\n#turn-display {\r\n    display: flex;\r\n}\r\n\r\n#active-player {\r\n    font-size: max(3.1vw,1em);\r\n    padding-top: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n}\r\n\r\n#new-game {\r\n    font-size: max(3.1vw,1em);\r\n    padding-top: 30px;\r\n    border: none;\r\n    color: #facac7;\r\n    font-family: \"Coiny\", system-ui;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    text-shadow: 0px 4px 1px black;\r\n    background: none;\r\n    cursor: pointer;\r\n}\r\n\r\n/*// GRID //*/\r\n\r\n#grid-container {\r\n    width: min(63vh, 30vw);\r\n    aspect-ratio: 1/1;\r\n    margin: 2.5%;\r\n    padding: 2.5%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #f8e5d5;\r\n    border-radius: 2rem;\r\n    box-shadow: 0px 0px 6px black;\r\n    overflow-y: hidden;\r\n}\r\n\r\n/*// scores //*/\r\n\r\n#score-container {\r\n    font-size: min(2.5rem, 4vw);\r\n}\r\n\r\n#player1-score {\r\n    color: #fea19a;\r\n}\r\n\r\n#player2-score {\r\n    color: #4f8a9d;\r\n}\r\n\r\n/*/////////////////////\r\n///// GRID DISPLAY ////\r\n/////////////////////*/\r\n\r\n.grid {\r\n    display: grid;\r\n    width: 96%;\r\n    height: 96%;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr 1fr;\r\n    overflow-y: hidden;\r\n}\r\n\r\n.cell {\r\n    width: 100%;\r\n    height: 100%;\r\n    border: min(3px, 0.3vw) solid #002d38; \r\n    background-color: #f8e5d5;\r\n    font-size: max(3rem, 6vw);\r\n    color: #4f8a9d;\r\n    font-family: \"Coiny\", system-ui;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    text-shadow: 0px 4px 1px black;\r\n    overflow-y: hidden;\r\n}\r\n\r\n.cell:hover {\r\n    cursor: pointer;\r\n}\r\n\r\n/*// Open Border Styling */\r\n\r\n#cell-1 {\r\n    border-left: none;\r\n    border-top: none;\r\n}\r\n\r\n#cell-2 {\r\n    border-top: none;\r\n}\r\n\r\n#cell-3 {\r\n    border-right: none;\r\n    border-top: none;\r\n}\r\n\r\n#cell-4 {\r\n    border-left: none;\r\n}\r\n\r\n#cell-6 {\r\n    border-right: none;\r\n}\r\n\r\n#cell-7 {\r\n    border-bottom: none;\r\n    border-left: none;\r\n}\r\n\r\n#cell-8 {\r\n    border-bottom: none;\r\n}\r\n\r\n#cell-9 {\r\n    border-bottom: none;\r\n    border-right: none;\r\n}\r\n\r\n.O {\r\n    color: #4f8a9d;\r\n}\r\n\r\n.X {\r\n    color: #fea19a;\r\n}\r\n\r\n/*////////////\r\nMOBILE SETTINGS\r\n/////////////*/\r\n\r\n@media (max-width: 600px) {\r\n    #main-left, #main-right{\r\n        display: none!important;\r\n    }\r\n\r\n    #player1-mark,#name-container, #edit-player2-name, #edit-player1-name, .player-name, #player2-mark {\r\n        display: none;\r\n    }\r\n\r\n    #main {\r\n        display: flex;\r\n        width: 100%;\r\n        justify-content: center;\r\n    }\r\n    \r\n    #AIbutton {\r\n        position: absolute;\r\n        top: 90%;\r\n        left: 42%;\r\n        width: fit-content;\r\n        height: fit-content;\r\n    }\r\n\r\n    #grid-container  {\r\n        \r\n        width: 80vw;\r\n    }\r\n\r\n    #main-center {\r\n        width: 100vw;\r\n    }\r\n}\r\n`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://tic-tac-toe/./src/styles.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\r\n\r\n/*\r\n  MIT License http://www.opensource.org/licenses/mit-license.php\r\n  Author Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function (cssWithMappingToString) {\r\n  var list = [];\r\n\r\n  // return the list of modules as css string\r\n  list.toString = function toString() {\r\n    return this.map(function (item) {\r\n      var content = \"\";\r\n      var needLayer = typeof item[5] !== \"undefined\";\r\n      if (item[4]) {\r\n        content += \"@supports (\".concat(item[4], \") {\");\r\n      }\r\n      if (item[2]) {\r\n        content += \"@media \".concat(item[2], \" {\");\r\n      }\r\n      if (needLayer) {\r\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\r\n      }\r\n      content += cssWithMappingToString(item);\r\n      if (needLayer) {\r\n        content += \"}\";\r\n      }\r\n      if (item[2]) {\r\n        content += \"}\";\r\n      }\r\n      if (item[4]) {\r\n        content += \"}\";\r\n      }\r\n      return content;\r\n    }).join(\"\");\r\n  };\r\n\r\n  // import a list of modules into the list\r\n  list.i = function i(modules, media, dedupe, supports, layer) {\r\n    if (typeof modules === \"string\") {\r\n      modules = [[null, modules, undefined]];\r\n    }\r\n    var alreadyImportedModules = {};\r\n    if (dedupe) {\r\n      for (var k = 0; k < this.length; k++) {\r\n        var id = this[k][0];\r\n        if (id != null) {\r\n          alreadyImportedModules[id] = true;\r\n        }\r\n      }\r\n    }\r\n    for (var _k = 0; _k < modules.length; _k++) {\r\n      var item = [].concat(modules[_k]);\r\n      if (dedupe && alreadyImportedModules[item[0]]) {\r\n        continue;\r\n      }\r\n      if (typeof layer !== \"undefined\") {\r\n        if (typeof item[5] === \"undefined\") {\r\n          item[5] = layer;\r\n        } else {\r\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\r\n          item[5] = layer;\r\n        }\r\n      }\r\n      if (media) {\r\n        if (!item[2]) {\r\n          item[2] = media;\r\n        } else {\r\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\r\n          item[2] = media;\r\n        }\r\n      }\r\n      if (supports) {\r\n        if (!item[4]) {\r\n          item[4] = \"\".concat(supports);\r\n        } else {\r\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\r\n          item[4] = supports;\r\n        }\r\n      }\r\n      list.push(item);\r\n    }\r\n  };\r\n  return list;\r\n};\n\n//# sourceURL=webpack://tic-tac-toe/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\r\n\r\nmodule.exports = function (i) {\r\n  return i[1];\r\n};\n\n//# sourceURL=webpack://tic-tac-toe/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/styles.css":
/*!************************!*\
  !*** ./src/styles.css ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./styles.css */ \"./node_modules/css-loader/dist/cjs.js!./src/styles.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://tic-tac-toe/./src/styles.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\r\n\r\nvar stylesInDOM = [];\r\nfunction getIndexByIdentifier(identifier) {\r\n  var result = -1;\r\n  for (var i = 0; i < stylesInDOM.length; i++) {\r\n    if (stylesInDOM[i].identifier === identifier) {\r\n      result = i;\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction modulesToDom(list, options) {\r\n  var idCountMap = {};\r\n  var identifiers = [];\r\n  for (var i = 0; i < list.length; i++) {\r\n    var item = list[i];\r\n    var id = options.base ? item[0] + options.base : item[0];\r\n    var count = idCountMap[id] || 0;\r\n    var identifier = \"\".concat(id, \" \").concat(count);\r\n    idCountMap[id] = count + 1;\r\n    var indexByIdentifier = getIndexByIdentifier(identifier);\r\n    var obj = {\r\n      css: item[1],\r\n      media: item[2],\r\n      sourceMap: item[3],\r\n      supports: item[4],\r\n      layer: item[5]\r\n    };\r\n    if (indexByIdentifier !== -1) {\r\n      stylesInDOM[indexByIdentifier].references++;\r\n      stylesInDOM[indexByIdentifier].updater(obj);\r\n    } else {\r\n      var updater = addElementStyle(obj, options);\r\n      options.byIndex = i;\r\n      stylesInDOM.splice(i, 0, {\r\n        identifier: identifier,\r\n        updater: updater,\r\n        references: 1\r\n      });\r\n    }\r\n    identifiers.push(identifier);\r\n  }\r\n  return identifiers;\r\n}\r\nfunction addElementStyle(obj, options) {\r\n  var api = options.domAPI(options);\r\n  api.update(obj);\r\n  var updater = function updater(newObj) {\r\n    if (newObj) {\r\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\r\n        return;\r\n      }\r\n      api.update(obj = newObj);\r\n    } else {\r\n      api.remove();\r\n    }\r\n  };\r\n  return updater;\r\n}\r\nmodule.exports = function (list, options) {\r\n  options = options || {};\r\n  list = list || [];\r\n  var lastIdentifiers = modulesToDom(list, options);\r\n  return function update(newList) {\r\n    newList = newList || [];\r\n    for (var i = 0; i < lastIdentifiers.length; i++) {\r\n      var identifier = lastIdentifiers[i];\r\n      var index = getIndexByIdentifier(identifier);\r\n      stylesInDOM[index].references--;\r\n    }\r\n    var newLastIdentifiers = modulesToDom(newList, options);\r\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\r\n      var _identifier = lastIdentifiers[_i];\r\n      var _index = getIndexByIdentifier(_identifier);\r\n      if (stylesInDOM[_index].references === 0) {\r\n        stylesInDOM[_index].updater();\r\n        stylesInDOM.splice(_index, 1);\r\n      }\r\n    }\r\n    lastIdentifiers = newLastIdentifiers;\r\n  };\r\n};\n\n//# sourceURL=webpack://tic-tac-toe/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\r\n\r\nvar memo = {};\r\n\r\n/* istanbul ignore next  */\r\nfunction getTarget(target) {\r\n  if (typeof memo[target] === \"undefined\") {\r\n    var styleTarget = document.querySelector(target);\r\n\r\n    // Special case to return head of iframe instead of iframe itself\r\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\r\n      try {\r\n        // This will throw an exception if access to iframe is blocked\r\n        // due to cross-origin restrictions\r\n        styleTarget = styleTarget.contentDocument.head;\r\n      } catch (e) {\r\n        // istanbul ignore next\r\n        styleTarget = null;\r\n      }\r\n    }\r\n    memo[target] = styleTarget;\r\n  }\r\n  return memo[target];\r\n}\r\n\r\n/* istanbul ignore next  */\r\nfunction insertBySelector(insert, style) {\r\n  var target = getTarget(insert);\r\n  if (!target) {\r\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\r\n  }\r\n  target.appendChild(style);\r\n}\r\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://tic-tac-toe/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction insertStyleElement(options) {\r\n  var element = document.createElement(\"style\");\r\n  options.setAttributes(element, options.attributes);\r\n  options.insert(element, options.options);\r\n  return element;\r\n}\r\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://tic-tac-toe/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction setAttributesWithoutAttributes(styleElement) {\r\n  var nonce =  true ? __webpack_require__.nc : 0;\r\n  if (nonce) {\r\n    styleElement.setAttribute(\"nonce\", nonce);\r\n  }\r\n}\r\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://tic-tac-toe/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction apply(styleElement, options, obj) {\r\n  var css = \"\";\r\n  if (obj.supports) {\r\n    css += \"@supports (\".concat(obj.supports, \") {\");\r\n  }\r\n  if (obj.media) {\r\n    css += \"@media \".concat(obj.media, \" {\");\r\n  }\r\n  var needLayer = typeof obj.layer !== \"undefined\";\r\n  if (needLayer) {\r\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\r\n  }\r\n  css += obj.css;\r\n  if (needLayer) {\r\n    css += \"}\";\r\n  }\r\n  if (obj.media) {\r\n    css += \"}\";\r\n  }\r\n  if (obj.supports) {\r\n    css += \"}\";\r\n  }\r\n  var sourceMap = obj.sourceMap;\r\n  if (sourceMap && typeof btoa !== \"undefined\") {\r\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\r\n  }\r\n\r\n  // For old IE\r\n  /* istanbul ignore if  */\r\n  options.styleTagTransform(css, styleElement, options.options);\r\n}\r\nfunction removeStyleElement(styleElement) {\r\n  // istanbul ignore if\r\n  if (styleElement.parentNode === null) {\r\n    return false;\r\n  }\r\n  styleElement.parentNode.removeChild(styleElement);\r\n}\r\n\r\n/* istanbul ignore next  */\r\nfunction domAPI(options) {\r\n  if (typeof document === \"undefined\") {\r\n    return {\r\n      update: function update() {},\r\n      remove: function remove() {}\r\n    };\r\n  }\r\n  var styleElement = options.insertStyleElement(options);\r\n  return {\r\n    update: function update(obj) {\r\n      apply(styleElement, options, obj);\r\n    },\r\n    remove: function remove() {\r\n      removeStyleElement(styleElement);\r\n    }\r\n  };\r\n}\r\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://tic-tac-toe/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction styleTagTransform(css, styleElement) {\r\n  if (styleElement.styleSheet) {\r\n    styleElement.styleSheet.cssText = css;\r\n  } else {\r\n    while (styleElement.firstChild) {\r\n      styleElement.removeChild(styleElement.firstChild);\r\n    }\r\n    styleElement.appendChild(document.createTextNode(css));\r\n  }\r\n}\r\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://tic-tac-toe/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/script.js":
/*!***********************!*\
  !*** ./src/script.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles.css */ \"./src/styles.css\");\n\r\n/*\r\n** The gameboard represents the state of the game.  \r\n** Each square has a cell, which will be defined later\r\n** We will use a later method to mark the cells with an X or an O\r\n*/\r\n\r\nfunction Gameboard() {\r\n    let board = [];\r\n    const rows = 3;\r\n    const columns = 3;\r\n\r\n    for (let i = 0; i < rows ; i++) {\r\n        //declares the next row as an empty array\r\n        board[i] = [];\r\n        //Fills the column array\r\n        for (let j = 0; j < columns; j++) {\r\n            board[i].push(Cell());\r\n        }\r\n    }\r\n\r\n    // Will later be used to render the board\r\n    const getBoard = () => board;\r\n\r\n    // Checks whether the column and row the player chose is available and \r\n    // if it is, placer a marker there\r\n    const placeMarker = (column, row, player) => {\r\n        if (board[column][row].getValue() === '') {\r\n            console.log(\"Valid Move\")\r\n            board[column][row].addMarker(player) \r\n            return true;\r\n        }\r\n        else {\r\n            console.log(`that is an invalid move on ${column}, ${row}`)\r\n            return false;\r\n        };\r\n    }\r\n\r\n    //Resets the board after win condition has been met\r\n    const resetBoard = () => {\r\n        board.forEach(row => row.forEach(cell => cell.addMarker('')));\r\n    }\r\n\r\n    //Prints the board to the console after each players turn\r\n    const printBoard = () => {\r\n        let boardWithCellValues = board.map(row => row.map(cell => cell.getValue()));\r\n        console.log(boardWithCellValues)\r\n        return boardWithCellValues;\r\n    }\r\n\r\n    //Provide interface for application\r\n    return { getBoard, placeMarker, printBoard, resetBoard};\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/* \r\n** A cell represents a square on the 3x3 grid and can be marked by:\r\n** - : Blank square,\r\n** 1 : Player one's mark,\r\n** O2 : Player two's mark\r\n*/\r\n\r\nfunction Cell() {\r\n    let value = '';\r\n\r\n    const setColor = (column, row, activePlayer) => {\r\n        const selectedCell = document.querySelector(`[data-column=\"${column}\"][data-row=\"${row}\"]`);\r\n        selectedCell.classList.add(activePlayer);\r\n    }\r\n\r\n    // Change cell value\r\n    const addMarker = (mark) => {\r\n        value = mark;\r\n    }\r\n\r\n    const getValue = () => value;\r\n\r\n    return { addMarker, getValue, setColor };\r\n}\r\n\r\n\r\n\r\n/*\r\n** The GameController is responsible for switcing turns and placing player markers\r\n** It also determines when the game is over and increments winning players score\r\n*/\r\n\r\nfunction GameController(playerOneName = \"Guest\", playerTwoName = \"Nicholas\") {\r\n\r\n    //Create the board and screen\r\n    const board = Gameboard();\r\n    let gameInProgress = true;\r\n\r\n    //Create player objects with name and marker type\r\n    const players = [\r\n        {\r\n            name: playerOneName,\r\n            mark: \"X\",\r\n            score: 0\r\n        },\r\n        {\r\n            name: playerTwoName,\r\n            mark: \"O\",\r\n            score: 0\r\n        }\r\n    ];\r\n    console.log(\"players have been made within gamecontroller\")\r\n    //Receive the name DOM element from screenController as newName, set player name\r\n    //to the passed variable\r\n    const setPlayerName = (newName, playerNumber) => {\r\n        players[playerNumber].name = newName;\r\n    };\r\n\r\n    //Logic for switching turns\r\n    let activePlayer = players[0];\r\n\r\n    const setActivePlayer = (playerNumber) => {\r\n        activePlayer = players[playerNumber];\r\n    };\r\n\r\n    const switchPlayerTurn = () => {\r\n        activePlayer = activePlayer === players[0] ? players[1] : players[0];\r\n        if (activePlayer === players[1]) {\r\n            setTimeout(() => AIMove(), 750); // Use an arrow function to delay the call\r\n        }\r\n    }\r\n\r\n    //Will be used for console declaration and later for UI \r\n    const getActivePlayer = () => activePlayer;\r\n\r\n    const incrementScore = () => activePlayer.score++;\r\n\r\n    const resetScore = () => {\r\n        players[0].score = 0;\r\n        players[1].score = 0;\r\n    }\r\n\r\n\r\n    //Creates an updated board within the console, checks if a player has won,\r\n    //and then resets the board if they have\r\n\r\n    const printNewRound = () => {\r\n        console.log(`\\n\\n${getActivePlayer().name}'s turn.`);\r\n        board.printBoard();\r\n    }\r\n\r\n    \r\n    //Runs anytime a tile is clicked\r\n\r\n    const playRound = (column, row) => {\r\n       // if (gameInProgress == true) {\r\n            const cell = Cell();\r\n\r\n            //Place player mark on desired column and row\r\n            console.log(`Marking ${column},${row} with ${getActivePlayer().name}'s mark: ${getActivePlayer().mark}`);\r\n    \r\n            //Generate new board\r\n            printNewRound();\r\n    \r\n            let validMove = board.placeMarker(column, row, getActivePlayer().mark)\r\n    \r\n            //Check whether the desired column and row are available\r\n            if (validMove === true){\r\n    \r\n                //Set color of marker\r\n                cell.setColor(row, column, getActivePlayer().mark)\r\n    \r\n                const currentBoard = board.printBoard();\r\n                const playerWon = checkWinCondition(currentBoard);\r\n                const draw = checkForDraw(currentBoard);\r\n    \r\n                if (playerWon == true) {\r\n                    incrementScore();\r\n                    console.log(`${players[0].name}s' score is ` + players[0].score + `. ${players[1].name}s score is ` + players[1].score);       \r\n                    updateScreenCallback(column, row);     \r\n                    return;\r\n                }\r\n    \r\n                if (draw == true) {\r\n                    console.log(\"\\nDRAW!\")\r\n                    updateScreenCallback(column, row);\r\n                    return;\r\n                }\r\n    \r\n                //Switch turn\r\n                switchPlayerTurn();\r\n                return true; \r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n      //  }\r\n    }\r\n\r\n    let updateScreenCallback;\r\n\r\n    const setUpdateScreen = (callback) => {\r\n        updateScreenCallback = callback; // Set the callback\r\n    };\r\n\r\n    const AIMove = () => {\r\n        const canAIMove = document.querySelector('#AIbutton').value;\r\n        console.log(\"Can AI move? \" + canAIMove + \" ; Is the game in progress? \" + gameInProgress);\r\n        if (canAIMove === \"true\" && gameInProgress == true) {\r\n            const bestMove = findBestMove();\r\n            console.log(`AI has chosen to place a mark at ${bestMove.row}, ${bestMove.col}`);\r\n            playRound(bestMove.row, bestMove.col); // Play the chosen move\r\n            updateScreenCallback(bestMove.row, bestMove.col); // Update the screen\r\n        }\r\n\r\n            // while (!validMove) {\r\n            //     //Attempt a winning move, if no winning move is possible then check to see if the player \r\n            //     //is about to win.  If both are null then make a random move\r\n            //     let move = checkForWin();\r\n            //     if (checkForWin() == null) { move = blockPlayer(); }\r\n            //     if (blockPlayer() == null) { move = RandomMove(); }\r\n                \r\n            //     console.log(`AI is attempting to place a mark at ${move[0]},${move[1]}`);\r\n            //     validMove = playRound(move[0], move[1]); // Attempt to play the round and check if valid\r\n            //     if (gameInProgress == false) {return}\r\n            // }\r\n\r\n            // Helper function to find the best move\r\n            function findBestMove() {\r\n                const currentBoard = board.printBoard();\r\n                let bestValue = -Infinity;\r\n                let bestMove = { row: -1, col: -1 };\r\n\r\n                for (let i = 0; i < 3; i++) {\r\n                    for (let j = 0; j < 3; j++) {\r\n                        if (currentBoard[i][j] === '') {\r\n                            currentBoard[i][j] = 'O'; // AI tries a move\r\n                            const moveValue = minimax(currentBoard, 0, false); // Evaluate the move\r\n                            currentBoard[i][j] = ''; // Undo the move\r\n\r\n                            //replace the best move if the evaluated move is better\r\n                            if (moveValue > bestValue) {\r\n                                bestValue = moveValue;\r\n                                bestMove = { row: i, col: j };\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                //returns the best move possible\r\n                return bestMove;\r\n            }\r\n\r\n            // Minimax function to evaluate the best move\r\n            function minimax(board, depth, isMaximizingPlayer) {\r\n                const score = evaluateBoard(board);\r\n                if (score !== 0 || isGameOver(board)) return score; // Base case: terminal node\r\n\r\n                //Calculates the best possible move for the AI and gives it a score\r\n                if (isMaximizingPlayer) {\r\n                    let best = -Infinity;\r\n\r\n                    for (let i = 0; i < 3; i++) {\r\n                        for (let j = 0; j < 3; j++) {\r\n                            if (board[i][j] === '') {\r\n                                board[i][j] = 'O'; // AI makes a move\r\n                                best = Math.max(best, minimax(board, depth + 1, false));\r\n                                board[i][j] = ''; // Undo the move\r\n                            }\r\n                        }\r\n                    }\r\n                    return best - depth; // Subtract depth to prefer quicker wins\r\n\r\n                //Calculates best possible player move and gives it a score\r\n                } else {\r\n                    let best = Infinity;\r\n\r\n                    for (let i = 0; i < 3; i++) {\r\n                        for (let j = 0; j < 3; j++) {\r\n                            if (board[i][j] === '') {\r\n                                board[i][j] = 'X'; // Player makes a move\r\n                                best = Math.min(best, minimax(board, depth + 1, true));\r\n                                board[i][j] = ''; // Undo the move\r\n                            }\r\n                        }\r\n                    }\r\n                    return best + depth; // Add depth to delay opponent's win\r\n                }\r\n            }\r\n\r\n            function evaluateBoard(board) {\r\n                // Check rows, columns, and diagonals for a winner\r\n                for (let i = 0; i < 3; i++) {\r\n                    if (board[i][0] === board[i][1] && board[i][1] === board[i][2]) {\r\n                        if (board[i][0] === 'O') return 10; // AI wins\r\n                        if (board[i][0] === 'X') return -10; // Player wins\r\n                    }\r\n                    if (board[0][i] === board[1][i] && board[1][i] === board[2][i]) {\r\n                        if (board[0][i] === 'O') return 10;\r\n                        if (board[0][i] === 'X') return -10;\r\n                    }\r\n                }\r\n                if (board[0][0] === board[1][1] && board[1][1] === board[2][2]) {\r\n                    if (board[0][0] === 'O') return 10;\r\n                    if (board[0][0] === 'X') return -10;\r\n                }\r\n                if (board[0][2] === board[1][1] && board[1][1] === board[2][0]) {\r\n                    if (board[0][2] === 'O') return 10;\r\n                    if (board[0][2] === 'X') return -10;\r\n                }\r\n                return 0; // No winner\r\n            }\r\n\r\n            // Check if the game is over (no empty spaces)\r\n            function isGameOver(board) {\r\n                for (let i = 0; i < 3; i++) {\r\n                    for (let j = 0; j < 3; j++) {\r\n                        if (board[i][j] === '') return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n\r\n\r\n            //////////OLD CODE////////////\r\n           /* function RandomMove() {\r\n                column = Math.floor(Math.random() * 3); // 0 to 2 for columns\r\n                row = Math.floor(Math.random() * 3); // 0 to 2 for rows\r\n                return [column, row];\r\n            }\r\n\r\n            //Check if there are any possible moves to win for the AI (runs before the blocking function)\r\n            function checkForWin() {\r\n                const currentBoard = board.printBoard();\r\n                \r\n                // Check rows\r\n                for (let i = 0; i < 3; i++) {\r\n                    if (currentBoard[i][0] === 'O' && currentBoard[i][1] === 'O' && currentBoard[i][2] === '') return [i, 2];\r\n                    if (currentBoard[i][0] === 'O' && currentBoard[i][2] === 'O' && currentBoard[i][1] === '') return [i, 1];\r\n                    if (currentBoard[i][1] === 'O' && currentBoard[i][2] === 'O' && currentBoard[i][0] === '') return [i, 0];\r\n                    \r\n                }\r\n                // Check columns\r\n                for (let j = 0; j < 3; j++) {\r\n                    if (currentBoard[0][j] === 'O' && currentBoard[1][j] === 'O' && currentBoard[2][j] === '') return [2, j];\r\n                    if (currentBoard[0][j] === 'O' && currentBoard[2][j] === 'O' && currentBoard[1][j] === '') return [1, j];\r\n                    if (currentBoard[1][j] === 'O' && currentBoard[2][j] === 'O' && currentBoard[0][j] === '') return [0, j];\r\n                    \r\n                }\r\n                // Check diagonals\r\n                if (currentBoard[0][0] === 'O' && currentBoard[1][1] === 'O' && currentBoard[2][2] === '') return [2, 2];\r\n                if (currentBoard[0][0] === 'O' && currentBoard[2][2] === 'O' && currentBoard[1][1] === '') return [1, 1];\r\n                if (currentBoard[1][1] === 'O' && currentBoard[2][2] === 'O' && currentBoard[0][0] === '') return [0, 0];\r\n                \r\n                if (currentBoard[0][2] === 'O' && currentBoard[1][1] === 'O' && currentBoard[2][0] === '') return [2, 0];\r\n                if (currentBoard[0][2] === 'O' && currentBoard[2][0] === 'O' && currentBoard[1][1] === '') return [1, 1];\r\n                if (currentBoard[1][1] === 'O' && currentBoard[2][0] === 'O' && currentBoard[0][2] === '') return [0, 2];\r\n\r\n                console.log(\"No win condition found\")\r\n                // No blocking move found\r\n                return null;\r\n            }\r\n\r\n            // Check if the player is about to win and block them\r\n            function blockPlayer() {\r\n                const currentBoard = board.printBoard();\r\n                \r\n                // Check rows\r\n                for (let i = 0; i < 3; i++) {\r\n                    if (currentBoard[i][0] === 'X' && currentBoard[i][1] === 'X' && currentBoard[i][2] === '') return [i, 2];\r\n                    if (currentBoard[i][0] === 'X' && currentBoard[i][2] === 'X' && currentBoard[i][1] === '') return [i, 1];\r\n                    if (currentBoard[i][1] === 'X' && currentBoard[i][2] === 'X' && currentBoard[i][0] === '') return [i, 0];\r\n                    \r\n                }\r\n                // Check columns\r\n                for (let j = 0; j < 3; j++) {\r\n                    if (currentBoard[0][j] === 'X' && currentBoard[1][j] === 'X' && currentBoard[2][j] === '') return [2, j];\r\n                    if (currentBoard[0][j] === 'X' && currentBoard[2][j] === 'X' && currentBoard[1][j] === '') return [1, j];\r\n                    if (currentBoard[1][j] === 'X' && currentBoard[2][j] === 'X' && currentBoard[0][j] === '') return [0, j];\r\n                    \r\n                }\r\n                // Check diagonals\r\n                if (currentBoard[0][0] === 'X' && currentBoard[1][1] === 'X' && currentBoard[2][2] === '') return [2, 2];\r\n                if (currentBoard[0][0] === 'X' && currentBoard[2][2] === 'X' && currentBoard[1][1] === '') return [1, 1];\r\n                if (currentBoard[1][1] === 'X' && currentBoard[2][2] === 'X' && currentBoard[0][0] === '') return [0, 0];\r\n                \r\n                if (currentBoard[0][2] === 'X' && currentBoard[1][1] === 'X' && currentBoard[2][0] === '') return [2, 0];\r\n                if (currentBoard[0][2] === 'X' && currentBoard[2][0] === 'X' && currentBoard[1][1] === '') return [1, 1];\r\n                if (currentBoard[1][1] === 'X' && currentBoard[2][0] === 'X' && currentBoard[0][2] === '') return [0, 2];\r\n\r\n                console.log(\"No win condition found\")\r\n                // No blocking move found\r\n                return null;\r\n            }\r\n        \r\n            console.log(`AI has placed a mark at ${column},${row}`);\r\n            updateScreenCallback(column, row);\r\n            return {column, row};\r\n        }*/\r\n        \r\n    };\r\n\r\n    const clearGrid = () => {\r\n        console.log(\"\\nResetting screen\")\r\n        board.resetBoard();\r\n        const cells = document.querySelectorAll('.cell');\r\n        cells.forEach(cell => {\r\n        cell.textContent = '';\r\n        cell.className = 'cell';\r\n        gameInProgress = true;\r\n        });\r\n    }\r\n\r\n    const checkForDraw = (currentBoard) => {\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                if (currentBoard[i][j] === '') {\r\n                    return false; // There's at least one empty space, not a draw\r\n                }\r\n            }\r\n        }\r\n        console.log(\"Game is draw\")\r\n        gameInProgress = false;\r\n        return true;\r\n    }\r\n    \r\n    //Checks to see whehter a player has made 3 of a row horizontally, vertically, or diagonally\r\n    const checkWinCondition = (currentBoard) => {\r\n        //Check for horizontal win conditions\r\n        for (let row = 0; row < 3; row++) {\r\n            if (currentBoard[row][0] === currentBoard[row][1] && currentBoard[row][1] === currentBoard[row][2] && currentBoard[row][0] !== '') {\r\n                console.log(`CONGRATULATIONS ${getActivePlayer().name.toUpperCase()}!! YOU WON!!!`);\r\n                gameInProgress = false;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        //Check for vertical win conditions\r\n        for (let col = 0; col < 3; col++) {\r\n            if (currentBoard[0][col] === currentBoard[1][col] && currentBoard[1][col] === currentBoard[2][col] && currentBoard[0][col] !== '') {\r\n                console.log(`CONGRATULATIONS ${getActivePlayer().name.toUpperCase()}!! YOU WON!!!`);\r\n                gameInProgress = false;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        //Check for diagonal win conditions\r\n        if ((currentBoard[0][0] === currentBoard[1][1] && currentBoard[1][1] === currentBoard[2][2] && currentBoard[0][0] !== '') ||\r\n            (currentBoard[0][2] === currentBoard[1][1] && currentBoard[1][1] === currentBoard[2][0] && currentBoard[0][2] !== '')) {\r\n                console.log(`CONGRATULATIONS ${getActivePlayer().name.toUpperCase()}!! YOU WON!!!`);\r\n                gameInProgress = false;\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n    //Initial boot display\r\n    printNewRound();\r\n\r\n    return { playRound, AIMove, setUpdateScreen, clearGrid, resetScore, getActivePlayer, setActivePlayer, checkWinCondition, checkForDraw, switchPlayerTurn, setPlayerName, players, getBoard: board.getBoard, printBoard: board.printBoard, gameInProgress };\r\n    \r\n}\r\n\r\n\r\n\r\n/////////////////////\r\n//SCREEN CONTROLLER//\r\n/////////////////////\r\n\r\n//Brings in all game functions to be tied into UI elements\r\nfunction ScreenController() {\r\n    const game = GameController();\r\n    const players = game.players;\r\n    \r\n\r\n    //Get HTML elements and store as variables\r\n    const activePlayerDiv = document.querySelector('#active-player');\r\n    const boardDiv = document.querySelector('.grid');\r\n    const playerOneScore = document.querySelector('#player1-score');\r\n    const playerTwoScore = document.querySelector('#player2-score');\r\n    const playerOneName = document.querySelector('#player-1');\r\n    const playerTwoName = document.querySelector('#player-2');\r\n    const newGameButton = document.querySelector('#new-game');\r\n    const AIbutton = document.querySelector('#AIbutton');\r\n\r\n    \r\n    //Set game as active (players can place tokens)\r\n    let gameInProgress = true;\r\n\r\n    //Name Updated (Called when the edit button is clicked)\r\n    const updateName = (playerNumber) => {\r\n        \r\n        //Edit player 1 name\r\n        if (playerNumber === 1) {\r\n            let openOrClosed;\r\n            openOrClosed = openOrClosed === false ? true : false\r\n\r\n            const playerInput = document.querySelector('#player1-input');\r\n            playerInput.style.display = playerInput.style.display === \"none\" ? 'block' : 'none';\r\n            game.setPlayerName(playerInput.value, 0);\r\n\r\n            //Change name upon closing\r\n            if (openOrClosed === false){\r\n                const playerNameElement = document.querySelector('#player-1');\r\n                playerNameElement.textContent = playerInput.value.toUpperCase();\r\n            }\r\n        }\r\n        //Edit player 2 name\r\n        else if (playerNumber === 2) {\r\n            let openOrClosed;\r\n            openOrClosed = openOrClosed === false ? true : false\r\n\r\n            const playerInput = document.querySelector('#player2-input');\r\n            playerInput.style.display = playerInput.style.display === \"none\" ? 'block' : 'none';\r\n            game.setPlayerName(playerInput.value, 1)\r\n\r\n            //Change name upon closing\r\n            if (openOrClosed === false){\r\n                const playerNameElement = document.querySelector('#player-2');\r\n                playerNameElement.textContent = playerInput.value.toUpperCase();\r\n            }\r\n        }\r\n        \r\n        updateScreen();\r\n    }\r\n\r\n    //Runs after the round has been played, updates current information\r\n    const updateScreen = (column, row) => {\r\n\r\n        //Get updated board and player turn\r\n        const board = game.getBoard();\r\n        const currentBoard = game.printBoard();\r\n        const playerWon = game.checkWinCondition(currentBoard);\r\n        const draw = game.checkForDraw(currentBoard);\r\n        const activePlayer = game.getActivePlayer();\r\n\r\n        //Display the current turn\r\n        activePlayerDiv.textContent = `${activePlayer.name}'s turn`;\r\n\r\n        //Update player score display after each round\r\n        playerOneScore.textContent = players[0].score;\r\n        playerTwoScore.textContent = players[1].score;\r\n\r\n        //Update players names when changed\r\n        playerOneName.textContent = players[0].name.toUpperCase();\r\n        playerTwoName.textContent = players[1].name.toUpperCase();\r\n\r\n        // Loop through the currentBoard and update each cell\r\n        for (let row = 0; row < 3; row++) {\r\n            for (let column = 0; column < 3; column++) {\r\n                const cell = document.querySelector(`[data-column=\"${column}\"][data-row=\"${row}\"]`);\r\n                cell.textContent = board[row][column].getValue(); // Assuming getValue() returns the marker (X, O or empty string)\r\n            }\r\n        }\r\n    \r\n        if (playerWon === true){\r\n            //Display the winner\r\n            activePlayerDiv.textContent = `${activePlayer.name} Wins!`;\r\n\r\n            //Disable the flow of the game\r\n            gameInProgress = false;\r\n\r\n            //Display new game button\r\n            newGameButton.style.display = 'block';\r\n        }        \r\n\r\n        //Draw logic\r\n        if (draw === true){\r\n            //Display the winner\r\n            activePlayerDiv.textContent = `DRAW!`;\r\n\r\n            //Disable the flow of the game\r\n            gameInProgress = false;\r\n\r\n            //Display new game button\r\n            newGameButton.style.display = 'block';\r\n        }        \r\n    }\r\n\r\n    function clickHandler(e) {\r\n        if (!gameInProgress) return;\r\n\r\n        //Store the selected row and column in constants\r\n        const selectedColumn = e.target.dataset.column;\r\n        const selectedRow = e.target.dataset.row;\r\n        \r\n\r\n        if (!selectedColumn || !selectedRow) return;\r\n\r\n        //Play a round on click\r\n        game.playRound(selectedRow, selectedColumn);\r\n        \r\n        //Update the screen with current information\r\n        updateScreen(selectedColumn, selectedRow);\r\n    }\r\n\r\n    //Toggle AI on and off\r\n    AIbutton.addEventListener('click', () => {\r\n        // Toggle the AI on or off\r\n        AIbutton.value = AIbutton.value === \"true\" ? \"false\" : \"true\";\r\n\r\n        game.setActivePlayer(0);\r\n\r\n        // Change button color based on AI state\r\n        if (AIbutton.value === \"false\"){\r\n            AIbutton.textContent = \"2 PLAYER\"\r\n            AIbutton.style.color = \"#FBF5E6\"\r\n        }\r\n        else {\r\n            AIbutton.textContent = \"AI\"\r\n            AIbutton.style.color = \"#FBF5E6\"\r\n        }\r\n        // Reset board when AI is toggled\r\n        game.resetScore();\r\n        game.clearGrid();\r\n        updateScreen();\r\n    });\r\n\r\n    boardDiv.addEventListener('click', clickHandler);\r\n\r\n    //When an edit button is clicked tell the edit function which button has been clicked\r\n    document.querySelector('#edit-player1-name').addEventListener('click', function() {\r\n        updateName(1);\r\n    });\r\n    \r\n    document.querySelector('#edit-player2-name').addEventListener('click', function() {\r\n        updateName(2);\r\n    });\r\n\r\n    //Reset the screen when the new game button is clicked\r\n    newGameButton.addEventListener('click', function() {\r\n        const activePlayer = game.getActivePlayer();\r\n\r\n        //Make tiles clickable again\r\n        gameInProgress = true;\r\n        //Reset the screen\r\n        game.clearGrid();\r\n\r\n        newGameButton.style.display = 'none';\r\n        game.switchPlayerTurn();\r\n        console.log(activePlayer.name);\r\n        activePlayerDiv.textContent = `${activePlayer.name}'s turn`;\r\n        console.log(\"Starting new round...\");\r\n\r\n        //Refresh the screen\r\n        updateScreen();\r\n    });\r\n\r\n    game.setUpdateScreen(updateScreen)\r\n\r\n    updateScreen();\r\n\r\n    return {displayWinner, updateScreen }\r\n}\r\n\r\nScreenController();\n\n//# sourceURL=webpack://tic-tac-toe/./src/script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/script.js");
/******/ 	
/******/ })()
;